------------------------------------ASSIGNMENT 1.01------------------------------------------------------------------------------------
January 24, 10:00pm - 1:30am :
  made Makefile main.c room.c and dungeonRoom.h files
    main.c
      - added generatehardness function - complete
      - added initRandom function - complete
      - added main function up to gnereateRooms function call

    dungeonRoom.h
      - added Room struct and defined type as Room_t
      - added generateRooms function prototype

    room.h
      - started generateRooms function

January 25, 1:00pm - 2:30pm :
  finish typing generateRooms - have yet to test
    room.h
      - finished generateRooms function in thoery

January 25, 3:00pm-11:00pm :
  - made function to print to screen - printGrid(char[][])
  - made second array to hold a character representation of the game board for easy printing - first array only held hardness
      and i just descovered that paths and rooms have the same hardness so it was going to be difficult to print.
  - found a whole lot of bugs in my generateRooms function
      - bug that prevented me from entering second loop
      - bug that resulted in rooms being placed too close to each other(error in my equation)
      - bug that allowed first room to be placed out of bounds(checked bounds with room collision and the first room never
          enters that loop)
  -added connect_rooms function
    -found bug in connect_rooms: the paths are print with gaps in them when the slope is very high
    -found bug that from my fix to the last bug, it wouldn't print in a horazontal line because it wouldn't enter the new loop i made
      adding a assignment to the first case outside the loop fixed the problem
-------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------ASSIGNMENT 1.02-----------------------------------------------------------------------
January 31, 10:00pm-10:30pm :
  -made load.c, gameio.h, and save.c files as well as .rlg327 directory
  -updated Makefile to compile these new classes.

February 1, 16:32-23:47 :
  -reorganized things to clean up main file.
  -made the generateRooms function which has most of the logic the the main
    function had in 1.01, this allows me to control when to generateRooms
    or when to do other operations in the new main method going forward.
    -found bug i need to use a pointer to the room_t pointer so that i can
      actually keep the array in the main function after generate Rooms runs
  -made enum to tell what mode the program is in
  -added function readArgs to interpret the command line arguments
  -bug found with enum, the name mode_t was already taken by stdlib
  -changed enum name to game_mode_t
  -finished readArgs - no bugs
  -added saveMap function which will create the save file
  -changed my hardness array to an uint8_t instead of an int
      to make reading and writing easier
  -finished saveMap - no bugs :)
  -changed main to use saveMap
  -finished loadMap - i had a bug with the math for reading the rooms.
  -changed the main function to make the necessary function calls for each mode
  -added save load and load_save functions to main.c to clean up the look of main.c
  -added new line to file string on accident so i removed that
--------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------ASSIGNMENT 1.03-----------------------------------------------------------------------
February 3, 16:20-20:00 :
  -added dungeon struct to help keep track of the data in main.
  -pulled includes into the header files for organization.
  -added path_finder.c which is going to hold the code to implement dijkstras algorithm
  -added heap file to to make my own heap implementation.
  -finished heap but needed to do level order traversal so i made que file to
      add my own que implementation
  -finished que, had lots of bugs where i wasnt initalizing things properly so
    it would have a bunch of garbage in the pointer memory locations. This resulted
    in me hunting down segmentaiton falts for an hour or so, but now i can get back
    to testing my heap.

February 8, 9:00-12:09 :
  -finished writing heap and testing, lots of bugs found too many to list
  -finished writing path_finder which uses the heap to find the shortest path and then returns a path_t linked list with all the
      data for which map location is in the path.
  -finished tying my path_finder into the map file.
